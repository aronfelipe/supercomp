#include <iostream>
#include <vector>

using namespace std;

bool time_of_job_function (int i ,int j) { return (i>j); }

int main() {

    int number_of_jobs = 0;
    int number_of_machines = 0;

    cin >> number_of_jobs >> number_of_machines;

    // cout << number_of_jobs << number_of_machines;

    vector<int> jobs;

    for(int i = 0; i < number_of_jobs; i++) {
        int time_of_job;
        cin >> time_of_job;
        jobs.push_back(time_of_job);
    }

    sort(jobs.begin(), jobs.end(), time_of_job_function);

    // for(auto& el: jobs) {
    //     cout << el;
    // }

    vector<vector<int> > matrix_of_machines;
    
    for(int i = 0; i < number_of_machines; i++) {
        vector<int> next_machine;
        matrix_of_machines.push_back(next_machine);
    }

    int number_of_machine_to_be_used = 0;

    int counter = 0;

    while (jobs.size() > 0) {
        matrix_of_machines[counter].push_back(jobs[0]);
        counter++;
        jobs.erase(jobs.begin());
        if(counter == number_of_machines) {
            counter = counter;
        }
    }

    cout << endl;

    for (auto& el: matrix_of_machines) {
        for(auto& element: el){
            cout << element;
        }
        cout << endl;
    }


}